'use strict';
/**
 * controller for Customers
 */
app.controller('customerJobConditionsRegisterTabsCtrl', ['$scope', '$rootScope', '$timeout', '$filter',
    function ($scope, $rootScope,  $timeout,  $filter) {

        $scope.loading = false;
        $scope.tabname = "tab1";
        $scope.activeTab = 1;
        $scope.loadedOther = ["tab1"];

        $scope.getView = function (viewName) {
            var views = $filter('filter')($scope.views, { name: viewName });
            return views[0];
        };

        $scope.switchTab = function (tab) {
            $timeout(function () {
                $scope.tabname = tab;
                $scope.loadedOther.push(tab);
            });
        };

        $scope.switchSubTab = function (subtab) {
            $timeout(function () {
                $scope.subtab = subtab;
            });
        };

    }
]);


'use strict';
/**
  * controller for JobConditions
*/
app.controller('customerJobConditionsRegisterListCtrl',
["$scope", "$stateParams", "$log", "DTOptionsBuilder", "DTColumnBuilder", "DTColumnDefBuilder", "$compile", "toaster", "$state", "$rootScope", "$timeout", "$http", "SweetAlert", "$aside", "$document", "ListService", "$localStorage", function ($scope, $stateParams, $log, DTOptionsBuilder, DTColumnBuilder, DTColumnDefBuilder, $compile, toaster, $state,
          $rootScope,$timeout, $http, SweetAlert, $aside, $document, ListService, $localStorage) {

    $scope.audit = {
        fields: [],
        filters: [],
    };

    getList();

    function getList() {
        var entities = [
            {name: 'criteria_operators', value: null},
            {name: 'criteria_conditions', value: null},
            {name: 'job_conditions_register_filter_field', value: null},
        ];

        ListService.getDataList(entities)
            .then(function (response) {
                $scope.criteria = response.data.data.criteriaOperatorList;
                $scope.conditions = response.data.data.criteriaConditionList;
                $scope.audit.fields = response.data.data.filterField;
            }, function (error) {
                $scope.status = 'Unable to load customer data: ' + error.message;
            });
    }


    $scope.addFilter = function () {
        if ($scope.audit.filters == null) {
            $scope.audit.filters = [];
        }
        $scope.audit.filters.push(
            {
                id: 0,
                field: null,
                criteria: $scope.criteria.length > 0 ? $scope.criteria[1] : null,
                condition: $scope.conditions.length > 0 ? $scope.conditions[0] : null,
                value: ""
            }
        );
    };

    $scope.onFilter = function () {
        $scope.reloadData();
    }

    $scope.removeFilter = function (index) {
        $scope.audit.filters.splice(index, 1);
    }

    $scope.onCleanFilter = function () {
        $scope.audit.filters = [];
        $scope.reloadData()
    }

    var storeDatatable = 'jobConditionsRegisterListCtrl-' + window.currentUser.id;
    $scope.dtInstanceJobConditionsRegister = {};
	$scope.dtOptionsJobConditionsRegister = DTOptionsBuilder.newOptions()
        .withBootstrap()
        .withOption('responsive', true)
        .withOption('ajax', {
            data: function(d) {
                if (angular.isDefined($scope.audit) && angular.isDefined($scope.audit.filters)) {
                    d.filter = {
                        filters: $scope.audit.filters.filter(function (filter) {
                            return filter != null && filter.field != null && filter.criteria != null;
                        }).map(function (filter, index, array) {
                            return {
                                field: filter.field.name,
                                operator: filter.criteria.value,
                                value: filter.value,
                                condition: filter.condition.value,
                            };
                        })
                    };
                }
                return JSON.stringify(d);
            },
            url: 'api/*******************',
            type: 'POST',
            beforeSend: function () {
            },
            complete: function () {
            }
        })
        .withDataProp('data')
        .withOption('stateSave', true)
        .withOption('stateSaveCallback', function (settings, data) {
            $localStorage[storeDatatable] = data;
        })
        .withOption('stateLoadCallback', function () {
            return $localStorage[storeDatatable];
        })
        .withOption('order', [[0, 'desc']])
        .withOption('serverSide', true).withOption('processing', true)
        .withOption('fnPreDrawCallback', function () {
            return true;
        })
        .withOption('fnDrawCallback', function () {
            loadRow();
        })
        .withOption('language', {})
        .withPaginationType('full_numbers')
        .withOption('createdRow', function (row, data, dataIndex) {
            $compile(angular.element(row).contents())($scope);
        });


    $scope.dtColumnsJobConditions = [
        DTColumnBuilder.newColumn(null).withTitle("Acciones").withOption('width', 120).notSortable()
            .renderWith(function (data) {
                var actions = "";
                var disabled = ""
                var editTemplate = '<a class="btn btn-primary btn-xs editRow lnk" href="#" uib-tooltip="Editar"  data-id="' + data.id + '"' + disabled + ' >' +
                    '   <i class="fa fa-edit"></i></a> ';

                actions += editTemplate;
                return actions;
            }),

            DTColumnBuilder.newColumn('fullName').withTitle("Nombre").withOption('width', 200).withOption('defaultContent', ''),
            DTColumnBuilder.newColumn(null).withTitle("Estado").withOption('width', 200)
                .renderWith(function (data) {
                    var label = 'label label-danger';
                    var text = 'Inactivo';

                    if (data.isActive != null || data.isActive != undefined) {
                        if (data.isActive == 'Activo') {
                            label = 'label label-success';
                            text = 'Activo';
                        }
                    }

                    return '<span class="' + label + '">' + text + '</span>';
                }),
    ];

    var loadRow = function () {

        $("#dtJobConditions a.editRow").on("click", function () {
            var id = $(this).data("id");
            // $state.go("app.positiva-fgn.consultants-edit",  { });
        });

    };

    $scope.reloadData = function () {
        $scope.dtInstanceJobConditionsRegister.reloadData();
    };

    $scope.onCreate = function () {
        // $state.go("app.positiva-fgn.consultants-edit",  { });
    };

}]);
